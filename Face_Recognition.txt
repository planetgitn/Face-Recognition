1----------

import cv2
face_detect=cv2.CascadeClassifier('haarcascade_frontalface_default.xml')
video=cv2.VideoCapture(0)
id=input('Enter user id')
sampleNum=0
while True:
    check,frame=video.read()
    gray=cv2.cvtColor(frame,cv2.COLOR_BGR2GRAY)
    face=face_detect.detectMultiScale(gray,scaleFactor=1.05,minNeighbors=5)
    for (x,y,w,h) in face:
        sampleNum=sampleNum+1
        cv2.imwrite('Dataset//User.'+str(id)+"."+str(sampleNum)+".jpg",gray[y:y+h,x:x+w])
        cv2.rectangle(frame,(x,y),(x+w,y+h),(255,0,0),2)
        cv2.waitKey(100);
    cv2.imshow("andy",frame)
    cv2.waitKey(1);
    if(sampleNum>20):
        break
video.release()
cv2.destroyAllWindows()

2---------

import cv2,os
import numpy as np
from PIL import Image

recognizer = cv2.face.LBPHFaceRecognizer_create()
detector= cv2.CascadeClassifier('haarcascade_frontalface_default.xml');
path=("Dataset")

def getImagesAndLabels(path):
    #get the path of all the files in the folder
    imagePaths=[os.path.join(path,f) for f in os.listdir(path)] 
    #create empth face list
    faceSamples=[]
    #create empty ID list
    Ids=[]
    #now looping through all the image paths and loading the Ids and the images
    for imagePath in imagePaths:
        #loading the image and converting it to gray scale
        pilImage=Image.open(imagePath).convert('L')
        #Now we are converting the PIL image into numpy array
        imageNp=np.array(pilImage,'uint8')
        #getting the Id from the image
        Id=int(os.path.split(imagePath)[-1].split(".")[1])
        # extract the face from the training image sample
        faces=detector.detectMultiScale(imageNp)
        #If a face is there then append that in the list as well as Id of it
        for (x,y,w,h) in faces:
            faceSamples.append(imageNp[y:y+h,x:x+w])
            Ids.append(Id)
    return faceSamples,Ids


faces,Ids = getImagesAndLabels(path)
recognizer.train(faces, np.array(Ids))
recognizer.save('recognizer\\trainner.yml')
cv2.destroyAllWindows()

3-----------

import cv2
face_detect=cv2.CascadeClassifier('haarcascade_frontalface_default.xml')
video=cv2.VideoCapture(0)
rec=cv2.face.LBPHFaceRecognizer_create()
rec.read("recognizer\\trainner.yml")
         
id=0
font=cv2.FONT_HERSHEY_SIMPLEX

while True:
    __,frame=video.read()
    gray=cv2.cvtColor(frame,cv2.COLOR_BGR2GRAY)
    face=face_detect.detectMultiScale(gray,scaleFactor=1.1,minNeighbors=15)
    for (x,y,w,h) in face:
        cv2.rectangle(frame,(x,y),(x+w++3,y+h++3),(255,0,0),2)
        id,conf=rec.predict(gray[y:y+h,x:x+w])
        if (id==1):
            id='andy'
        cv2.putText(frame,str(id),(x+h,y),font,1,(255,0,255),2);
    cv2.imshow("andy",frame)
    key=cv2.waitKey(1)
    if key==ord('k'):
        break
video.release()
cv2.destroyAllWindows()